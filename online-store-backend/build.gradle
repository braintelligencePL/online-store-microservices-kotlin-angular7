buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.2.RELEASE'
        gradleDocker = '1.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "se.transmode.gradle:gradle-docker:$gradleDocker"
    }
}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'docker'
    apply plugin: 'kotlin'
    apply plugin: 'groovy'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' } // for Spock 1.3
    }

    group = 'pl.braintelligence'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    dependencies {
        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"

        // Functional
        implementation 'io.arrow-kt:arrow-core:0.8.2'

        // Spring
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // Tests
        implementation 'org.spockframework.spock:spock-core:spock-1.3'
        implementation 'org.spockframework.spock:spock-spring:spock-1.3'
        implementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.github.tomakehurst:wiremock:2.21.0'
        testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'

        // commons, shared-kernel, generic code for all sub-projects
        compile project(':shared-kernel')
        testCompile project(':shared-kernel')

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
        }
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = false
        applicationName = jar.baseName
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }
}

// remove /build folder in root project
gradle.buildFinished {
    project.buildDir.deleteDir()
}
