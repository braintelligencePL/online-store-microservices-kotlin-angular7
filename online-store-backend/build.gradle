buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.2.RELEASE'
        gradleDocker = '1.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "se.transmode.gradle:gradle-docker:$gradleDocker"
    }
}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'docker'
    apply plugin: 'kotlin'
    apply plugin: 'groovy'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    group = 'pl.braintelligence'
    sourceCompatibility = '1.8'

    dependencies {
        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"

        // Spring
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // for jdk-12 to work with Spring
        implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
        implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
        }
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = false
        applicationName = jar.baseName
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }
}


// remove /build folder in root project
gradle.buildFinished {
    project.buildDir.deleteDir()
}
